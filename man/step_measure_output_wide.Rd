% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/output_wide.R
\name{step_measure_output_wide}
\alias{step_measure_output_wide}
\title{Reorganize Measurements to Separate Columns}
\usage{
step_measure_output_wide(
  recipe,
  prefix = "measure_",
  role = "predictor",
  trained = FALSE,
  skip = FALSE,
  id = rand_id("measure_output_wide")
)
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the
sequence of operations for this recipe.}

\item{prefix}{A character string used to name the new columns.}

\item{role}{Not used by this step since no new variables are
created.}

\item{trained}{A logical to indicate if the quantities for
preprocessing have been estimated.}

\item{skip}{A logical. Should the step be skipped when the
recipe is baked by \code{\link[recipes:bake]{bake()}}? While all operations are baked
when \code{\link[recipes:prep]{prep()}} is run, some operations may not be able to be
conducted on new data (e.g. processing the outcome variable(s)).
Care should be taken when using \code{skip = TRUE} as it may affect
the computations for subsequent operations.}

\item{id}{A character string that is unique to this step to identify it.}
}
\description{
\code{step_measure_output_wide} creates a \emph{specification} of a recipe
step that converts measures to multiple columns (i.e., "wide" format).
}
\details{
This step is designed convert analytical measurements from their internal
data structure to separate columns.

Wide outputs can be helpful when you want to use standard recipes steps with
the measuresments, such as \code{\link[recipes:step_pca]{recipes::step_pca()}}, \code{\link[recipes:step_pls]{recipes::step_pls()}}, and
so on.
}
\examples{
library(dplyr)

data(glucose_bioreactors)
bioreactors_small$batch_sample <- NULL

small_tr <- bioreactors_small[  1:200,]
small_te <- bioreactors_small[201:210,]

small_rec <-
  recipe(glucose ~ . , data = small_tr) \%>\%
  update_role(batch_id, day, new_role = "id columns") \%>\%
  step_measure_input_wide(`400`:`3050`) \%>\%
  prep()

# Before reformatting:

small_rec \%>\% bake(new_data = small_te)

# After reformatting:

output_rec <-
  small_rec \%>\%
  step_measure_output_wide() \%>\%
  prep()

output_rec \%>\% bake(new_data = small_te)

}
\seealso{
Other input/output steps: 
\code{\link{step_measure_input_long}()},
\code{\link{step_measure_input_wide}()},
\code{\link{step_measure_output_long}()}
}
\concept{input/output steps}
