% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/output_long.R
\name{step_measure_output_long}
\alias{step_measure_output_long}
\title{Reorganize Measurements to Two Columns}
\usage{
step_measure_output_long(
  recipe,
  values_to = ".measure",
  location_to = ".location",
  role = "predictor",
  trained = FALSE,
  skip = FALSE,
  id = rand_id("measure_output_long")
)
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the
sequence of operations for this recipe.}

\item{values_to}{A single character string for the column containing the
analytical maesurement.}

\item{location_to}{A single character string for the column containing the
location of the measurement (e.g. wavenumber or index).}

\item{role}{Not used by this step since no new variables are
created.}

\item{trained}{A logical to indicate if the quantities for
preprocessing have been estimated.}

\item{skip}{A logical. Should the step be skipped when the
recipe is baked by \code{\link[recipes:bake]{bake()}}? While all operations are baked
when \code{\link[recipes:prep]{prep()}} is run, some operations may not be able to be
conducted on new data (e.g. processing the outcome variable(s)).
Care should be taken when using \code{skip = TRUE} as it may affect
the computations for subsequent operations.}

\item{id}{A character string that is unique to this step to identify it.}
}
\description{
\code{step_measure_output_long} creates a \emph{specification} of a recipe
step that converts measures to a format with columns for the measurement and
the corresponding location (i.e., "long" format).
}
\details{
This step is designed convert analytical measurements from their internal
data structure to a two column format.
}
\examples{
library(dplyr)

data(glucose_bioreactors)
bioreactors_small$batch_sample <- NULL

small_tr <- bioreactors_small[1:200, ]
small_te <- bioreactors_small[201:210, ]

small_rec <-
  recipe(glucose ~ ., data = small_tr) \%>\%
  update_role(batch_id, day, new_role = "id columns") \%>\%
  step_measure_input_wide(`400`:`3050`) \%>\%
  prep()

# Before reformatting:

small_rec \%>\% bake(new_data = small_te)

# After reformatting:

output_rec <-
  small_rec \%>\%
  step_measure_output_long() \%>\%
  prep()

output_rec \%>\% bake(new_data = small_te)

}
\seealso{
Other input/output steps: 
\code{\link{step_measure_input_long}()},
\code{\link{step_measure_input_wide}()},
\code{\link{step_measure_output_wide}()}
}
\concept{input/output steps}
