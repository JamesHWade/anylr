% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/measure_collect.R
\name{step_measure_collect}
\alias{step_measure_collect}
\title{Nest measure variables for downstream prep and modeling}
\usage{
step_measure_collect(
  recipe,
  ...,
  role = "measure",
  identifiers = NA,
  trained = FALSE,
  shape = c("long", "wide"),
  columns = NULL,
  skip = FALSE,
  id = rand_id("measure_collect")
)
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the
sequence of operations for this recipe.}

\item{...}{One or more selector functions to choose which
variables are affected by the step. See \code{\link[=selections]{selections()}}
for more details. For the \code{tidy} method, these are not
currently used.}

\item{role}{A newly created column \code{.measure} is given role "measure"}

\item{identifiers}{A combination of roles (descriptors + conditions) used
for subsequent processing}

\item{trained}{A logical to indicate if the quantities for
preprocessing have been estimated.}

\item{shape}{The starting shape of the data, either "long" or "wide" using
tidyr-style nomenclature.}

\item{columns}{A character string of variable names that will
be populated (eventually) by the \code{terms} argument.}

\item{skip}{A logical. Should the step be skipped when the
recipe is baked by \code{\link[=bake]{bake()}}? While all operations are baked
when \code{\link[=prep]{prep()}} is run, some operations may not be able to be
conducted on new data (e.g. processing the outcome variable(s)).
Care should be taken when using \code{skip = TRUE} as it may affect
the computations for subsequent operations}

\item{id}{A character string that is unique to this step to identify it.}
}
\value{
An updated version of \code{recipe} with the new step added to the
sequence of any existing operations.
}
\description{
\code{step_measure_collect} creates a \emph{specification} of a recipe
step that nests measurement columns into column \code{.measures}. This is often
the first step in preparing measurement data for downstream modeling.
}
\section{Tidying}{
When you \code{\link[=tidy.recipe]{tidy()}} this step, a tibble with columns
... fill in later ... is returned.
}

\examples{
\dontrun{
library(modeldata)
data(meats)
# todo
}
}
