% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/baseline.R
\name{step_baseline}
\alias{step_baseline}
\title{Fit and subtract a baseline from a measurement signal}
\usage{
step_baseline(
  recipe,
  ...,
  role = NA,
  trained = FALSE,
  options = NULL,
  skip = FALSE,
  id = recipes::rand_id("measure")
)
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the
sequence of operations for this recipe.}

\item{...}{One or more selector functions to choose variables
for this step.}

\item{role}{Assign the role of new variables.}

\item{trained}{A logical to indicate if the quantities for
preprocessing have been estimated.}

\item{options}{A list of options to the default method for
\code{\link[stats:prcomp]{stats::prcomp()}}. Argument defaults are set to \code{retx = FALSE}, \code{center = FALSE}, \code{scale. = FALSE}, and \code{tol = NULL}. \strong{Note} that the argument \code{x}
should not be passed here (or at all).}

\item{skip}{A logical. Should the step be skipped when the
recipe is baked by \code{\link[recipes:bake]{bake()}}? While all operations are baked
when \code{\link[recipes:prep]{prep()}} is run, some operations may not be able to be
conducted on new data (e.g. processing the outcome variable(s)).
Care should be taken when using \code{skip = TRUE} as it may affect
the computations for subsequent operations.}

\item{id}{A character string that is unique to this step to identify it.}
}
\description{
Fit and subtract a baseline from a measurement signal
}
